name: Run integration tests

on:
  workflow_call:
    inputs:
      plugin-runner-image:
        default: "ghcr.io/ust-quantil/qhana-plugin-runner:main"
        required: false
        type: string
      backend-image:
        default: "ghcr.io/ust-quantil/qhana-backend:main"
        required: false
        type: string
      ui-image:
        default: "ghcr.io/ust-quantil/qhana-ui:main"
        required: false
        type: string
      registry-image:
        default: "ghcr.io/ust-quantil/qhana-plugin-registry:main"
        required: false
        type: string
  workflow_dispatch:
    inputs:
      plugin-runner-image:
        default: "ghcr.io/ust-quantil/qhana-plugin-runner:main"
        required: false
        type: string
      backend-image:
        default: "ghcr.io/ust-quantil/qhana-backend:main"
        required: false
        type: string
      ui-image:
        default: "ghcr.io/ust-quantil/qhana-ui:main"
        required: false
        type: string
      registry-image:
        default: "ghcr.io/ust-quantil/qhana-plugin-registry:main"
        required: false
        type: string

env:
  PLUGIN_RUNNER_IMAGE: ${{ inputs.plugin-runner-image }}
  BACKEND_IMAGE: ${{ inputs.backend-image }}
  UI_IMAGE: ${{ inputs.ui-image }}
  REGISTRY_IMAGE: ${{ inputs.registry-image }}

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      - name: clone integration tests
        uses: actions/checkout@v3
        with:
          repository: UST-QuAntiL/qhana-integration-tests
          path: integration_tests
      - name: start docker compose
        run: docker compose -f integration_tests/.github/docker-compose.yml up -d --quiet-pull
      - name: Save container logs to file
        run: docker-compose -f integration_tests/.github/docker-compose.yml logs --follow --no-color > containers.log &
      - name: download wait script
        run: wget https://raw.githubusercontent.com/eficode/wait-for/v2.2.3/wait-for && chmod +x wait-for
      - name: wait for backend
        run: "./wait-for http://localhost:9091 -t 600"
      - name: wait for UI
        run: "./wait-for http://localhost:8080 -t 600"
      - name: wait for plugin runner
        run: "./wait-for http://localhost:5005 -t 600"
      - name: wait for Chrome
        run: "./wait-for http://localhost:4444 -t 600"
      - name: wait for registry
        run: "./wait-for http://localhost:5006/api/ -t 600"
      - name: wait for registry to fetch plugins
        uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '2m'
      - name: install poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: install dependencies
        run: export PATH="~/.local/bin:$PATH" && poetry install
        working-directory: ./integration_tests
      - name: run integration tests
        run: export PATH="~/.local/bin:$PATH" && poetry run python -m unittest src.plugin_tests
        env:
          INTEGRATION_TEST_BROWSER: "chrome"
          INTEGRATION_TEST_REMOTE: "true"
          INTEGRATION_TEST_REMOTE_URL: "http://localhost:4444"
          INTEGRATION_TEST_SLEEP_TIME: 5
        working-directory: ./integration_tests
      - name: Store container logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: container-logs
          path: containers.log
